version: "3.3"
services:
  vpn:
    image: thrnz/docker-wireguard-pia
    container_name: pia_vpn
    restart: unless-stopped
    volumes:
        - pia-dat:/pia
        - ./pia/:/pia-shared
    ports:
        - 8082:8080
    cap_add:
        - NET_ADMIN
    environment:
        - LOCAL_NETWORK=${PIA_LOCAL_NETWORK}
        # Remove if using dedicated IP
        - LOC=${PIA_SERVER_LOC}
        - USER=${PIA_USERNAME}
        - PASS=${PIA_PASSWORD}
        - PORT_FORWARDING=1
        - PORT_FILE= /pia-shared/port.dat
        - FIREWALL=1
        # Remove if not using dedicated IP
        - PIA_DIP_TOKEN=${PIA_DIP_TOKEN}
    sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./radarr/config:/config
      - ${MOVIES_PATH}:/movies
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - ${RADARR_PORT}:7878
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7878 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
      - qbittorrent
      - sabnzbd
      - prowlarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sonarr/config:/config
      - ${TV_PATH}:/tv
      - ${ANIME_PATH}:/anime
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - ${SONARR_PORT}:8989
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8989 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
      - qbittorrent
      - sabnzbd
      - prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./prowlarr/config:/config
    ports:
      - ${PROWLARR_PORT}:9696
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9696 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
      - qbittorrent
      - sabnzbd
      - flaresolverr
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - LOG_LEVEL=info
    ports:
      - ${FLARESOLVERR_PORT}:8191
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8191 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
  readarr-audiobooks:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-audiobooks
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./readarr-audiobooks/config:/config
      - ${AUDIOBOOKS_PATH}:/audiobooks
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - ${READARR_AUDIOBOOKS_PORT}:8787
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8787 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
      - qbittorrent
      - sabnzbd
      - prowlarr
  readarr-ebooks:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr-ebooks
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./readarr-ebooks/config:/config
      - ${BOOKS_PATH}:/audiobooks
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - ${READARR_EBOOKS_PORT}:8787
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8787 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
      - qbittorrent
      - sabnzbd
      - prowlarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./bazarr/config:/config
      - ${MOVIES_PATH}:/movies
      - ${TV_PATH}:/tv
      - ${ANIME_PATH}:/anime
    ports:
      - ${BAZARR_PORT}:6767 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6767 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
      - sonarr
      - radarr
  qbittorrent:
    image: qbittorrentofficial/qbittorrent-nox:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - QBT_LEGAL_NOTICE=confirm
      - QBT_VERSION=latest
      - QBT_WEBUI_PORT=${QBITTORRENT_PORT}
      - TZ=${TIMEZONE}
    ports:
      - ${QBITTORRENT_PORT}:8080
    read_only: true
    stop_grace_period: 30m
    tmpfs:
      - /tmp
    tty: true
    volumes:
      - ./qbittorrent/config:/config
      - ${DOWNLOADS_PATH}:/downloads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
  qbittorrent-porthelper:
    image: scotte/qbittorrent-porthelper:latest
    container_name: qbittorrent-porthelper
    restart: unless-stopped
    environment:
      - HOST=${QBITTORRENT_HOST}
      - USERNAME=${QBITTORRENT_USERNAME}
      - PASSWORD=${QBITTORRENT_PASSWORD}
    volumes:
      - ./pia/port.dat:/piashared/port.dat
    depends_on:
      - qbittorrent
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    restart: unless-stopped
    network_mode: "service:vpn"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ./sabnzbd/config:/config
      - ${DOWNLOADS_PATH}/Usenet/complete:/downloads
      - ${DOWNLOADS_PATH}/Usenet/temp:/incomplete-downloads
    ports:
      - ${SABNZBD_PORT}:8080
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
    depends_on:
      - vpn
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 8000:8000
      - 9443:9443
    healthcheck:
      test: ["CMD-SHELL", "curl --insecure -f https://localhost:9443 || exit 1"]
      interval: ${HEALTH_CHECK_INTERVAL}
      timeout: ${HEALTH_CHECK_TIMEOUT}
      retries: ${HEALTH_CHECK_RETRIES}
      start_period: ${HEALTH_CHECK_START_PERIOD}
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 5 * * *"
  autoheal:
    image: willfarrell/autoheal
    container_name: autoheal
    restart: unless-stopped
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  syncthing:
    image: syncthing/syncthing:latest
    container_name: syncthing
    restart: unless-stopped
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      
volumes:
  portainer_data:
  pia-dat:
